// Code generated by protoc-gen-go.
// source: metric_data_point.proto
// DO NOT EDIT!

package dynobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RawDataPoint struct {
	CustomerId string  `protobuf:"bytes,1,opt,name=customer_id,json=customerId" json:"customer_id,omitempty"`
	Process    string  `protobuf:"bytes,2,opt,name=process" json:"process,omitempty"`
	Cluster    string  `protobuf:"bytes,3,opt,name=cluster" json:"cluster,omitempty"`
	Metric     string  `protobuf:"bytes,4,opt,name=metric" json:"metric,omitempty"`
	Operation  string  `protobuf:"bytes,5,opt,name=operation" json:"operation,omitempty"`
	Value      float64 `protobuf:"fixed64,6,opt,name=value" json:"value,omitempty"`
	Timestamp  int64   `protobuf:"varint,7,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *RawDataPoint) Reset()                    { *m = RawDataPoint{} }
func (m *RawDataPoint) String() string            { return proto.CompactTextString(m) }
func (*RawDataPoint) ProtoMessage()               {}
func (*RawDataPoint) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func init() {
	proto.RegisterType((*RawDataPoint)(nil), "dynobuf.RawDataPoint")
}

func init() { proto.RegisterFile("metric_data_point.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 211 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x44, 0x8f, 0xcf, 0x4a, 0x03, 0x31,
	0x10, 0xc6, 0x89, 0xb5, 0xbb, 0x74, 0xf4, 0x14, 0xd4, 0xce, 0x41, 0x50, 0x3c, 0x79, 0xea, 0xc5,
	0x37, 0x10, 0x2f, 0xde, 0x24, 0x2f, 0xb0, 0xa4, 0x49, 0x84, 0x40, 0xb3, 0x13, 0x92, 0x59, 0xc5,
	0x87, 0xf4, 0x9d, 0x9a, 0x3f, 0x2d, 0xbd, 0xe5, 0xf7, 0xfd, 0x26, 0xc3, 0x7c, 0xb0, 0x0d, 0x8e,
	0x93, 0x37, 0x93, 0xd5, 0xac, 0xa7, 0x48, 0x7e, 0xe6, 0x5d, 0x4c, 0xc4, 0x24, 0x47, 0xfb, 0x37,
	0xd3, 0x7e, 0xf9, 0x7e, 0xf9, 0x17, 0x70, 0xab, 0xf4, 0xef, 0x47, 0x19, 0xf8, 0xaa, 0x5e, 0x3e,
	0xc1, 0x8d, 0x59, 0x32, 0x53, 0x70, 0x69, 0xf2, 0x16, 0xc5, 0xb3, 0x78, 0xdd, 0x28, 0x38, 0x47,
	0x9f, 0x56, 0x22, 0x8c, 0x65, 0x87, 0x71, 0x39, 0xe3, 0x55, 0x93, 0x67, 0xac, 0xc6, 0x1c, 0xca,
	0xa0, 0x4b, 0xb8, 0xea, 0xe6, 0x84, 0xf2, 0x01, 0x86, 0x7e, 0x09, 0x5e, 0x37, 0x71, 0x22, 0xf9,
	0x08, 0x1b, 0x8a, 0x2e, 0x69, 0xf6, 0x34, 0xe3, 0xba, 0xa9, 0x4b, 0x20, 0xef, 0x60, 0xfd, 0xa3,
	0x0f, 0x8b, 0xc3, 0xa1, 0x18, 0xa1, 0x3a, 0xd4, 0x3f, 0xec, 0x83, 0xcb, 0xac, 0x43, 0xc4, 0xb1,
	0x98, 0x95, 0xba, 0x04, 0xef, 0x5b, 0xb8, 0xf7, 0xb4, 0xab, 0xed, 0x42, 0x59, 0x62, 0x7a, 0xdd,
	0x52, 0x74, 0x3f, 0xb4, 0xd7, 0xdb, 0x31, 0x00, 0x00, 0xff, 0xff, 0x50, 0x83, 0x05, 0x7c, 0x13,
	0x01, 0x00, 0x00,
}
